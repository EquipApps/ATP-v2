<reactiveUI:ReactiveUserControl x:Class="EquipApps.WorkBench.Views.LogViewerView"
                                x:TypeArguments="vm:LogViewerViewModel"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                                xmlns:reactiveUI="http://reactiveui.net"   
                                xmlns:local="clr-namespace:EquipApps.WorkBench.Views"
                                xmlns:vm="clr-namespace:EquipApps.WorkBench.ViewModels"
                                xmlns:Controls  ="http://metro.mahapps.com/winfx/xaml/controls"
                                xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                                mc:Ignorable="d" 
                                d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>               
            </ResourceDictionary.MergedDictionaries>

            <!--ToggleButton-->
            <Style x:Key="MyToggleButton" TargetType="ToggleButton" >
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.White}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background"  Value="{DynamicResource MahApps.Brushes.Accent4}" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Foreground"       Value="{DynamicResource MahApps.Brushes.Black}" />
                <Setter Property="Background"       Value="{DynamicResource MahApps.Brushes.White}" />
                <Setter Property="BorderBrush"      Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="BorderThickness"  Value="1" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Name="Border" Margin="0" 
                                    Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Controls:ContentControlEx Name="PART_ContentPresenter" 
                                                           Padding="{TemplateBinding Padding}" 
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                           Content="{TemplateBinding Content}" 
                                                           ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                                           RecognizesAccessKey="True" 
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                           ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>


            </Style>

            <Style x:Key="MyButton" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush"      Value="{DynamicResource MahApps.Brushes.White}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />                        
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Foreground"       Value="{DynamicResource MahApps.Brushes.Black}" />
                <Setter Property="Background"       Value="{DynamicResource MahApps.Brushes.White}" />
                <Setter Property="BorderBrush"      Value="{DynamicResource MahApps.Brushes.AccentBase}" />
                <Setter Property="BorderThickness"  Value="1" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border" Margin="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Controls:ContentControlEx Name="PART_ContentPresenter" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>            
            <RowDefinition />
        </Grid.RowDefinitions>

        <ToolBar >
            <ToolBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel/>
                </ItemsPanelTemplate>
            </ToolBar.ItemsPanel>

            <ToggleButton x:Name="FilterFail" Style="{StaticResource MyToggleButton}" >
                <StackPanel Orientation="Horizontal">
                    <Image Height="16" Width="16"  Margin="0,0,1,0" Source="/EquipApps.WorkBench.WPF;component/Images/icon-error.png" />
                    <TextBlock x:Name="TotalFail"  Margin="1,0,1,0" Text="3"/>
                    <TextBlock x:Name="CountFail"  Margin="0,0,1,0" Text="3"/>
                    <TextBlock Text="Ошибок"       Margin="0,0,1,0"/>
                </StackPanel>
            </ToggleButton>
            <Separator/>

            <ToggleButton x:Name="FilterWarn" Style="{StaticResource MyToggleButton}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="16" Width="16"  Margin="0,0,1,0" Source="/EquipApps.WorkBench.WPF;component/Images/icon-warning.png" />                           
                    <TextBlock x:Name="TotalWarn" Margin="0,0,1,0"/>
                    <TextBlock x:Name="CountWarn" Margin="0,0,1,0"/>
                    <TextBlock Text="Предупреждений"/>
                </StackPanel>
            </ToggleButton>
            <Separator/>

            <ToggleButton x:Name="FilterInfo" Style="{StaticResource MyToggleButton}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="16" Width="16" Margin="0,0,1,0"   Source="/EquipApps.WorkBench.WPF;component/Images/icon-info.png" />
                    <TextBlock x:Name="TotalInfo" Margin="0,0,1,0"/>
                    <TextBlock x:Name="CountInfo" Margin="0,0,1,0" />
                    <TextBlock Text="Сообщений" />
                </StackPanel>
            </ToggleButton>
            <Separator/>

            <ToggleButton x:Name="FilterDbug" Style="{StaticResource MyToggleButton}" >
                <iconPacks:Material   Kind="Information" />
            </ToggleButton>            
            <Separator/>

            <Button x:Name="FilterRemove" Style="{StaticResource MyButton}"  >
                <iconPacks:Material   Kind="FilterRemove" />
            </Button>
            <Separator/>

            <ComboBox x:Name="FilterGroups" Width="200" DockPanel.Dock="Right" Padding="0" MinHeight="21"
                      Style="{DynamicResource MahApps.Styles.ComboBox}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Title}" Padding="0"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

        </ToolBar>

        <DataGrid Grid.Row="1" x:Name="LogRecordsListView" 
                  IsReadOnly="True" AutoGenerateColumns="False"
                  HeadersVisibility="All"
                  
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"
                  VirtualizingPanel.IsContainerVirtualizable="True"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  HorizontalScrollBarVisibility ="Visible"
                  VerticalScrollBarVisibility   ="Visible">
            
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False"
                                        Width="25">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Width="16" Height="16">
                                <Image  x:Name="Image" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding LogLevel}" Value="fail">
                                    <Setter TargetName="Image" Property="Source" Value="/EquipApps.WorkBench.WPF;component/Images/icon-error.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding LogLevel}" Value="warn">
                                    <Setter TargetName="Image" Property="Source" Value="/EquipApps.WorkBench.WPF;component/Images/icon-warning.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding LogLevel}" Value="info">
                                    <Setter TargetName="Image" Property="Source" Value="/EquipApps.WorkBench.WPF;component/Images/icon-info.png"/>
                                </DataTrigger>                                
                            </DataTemplate.Triggers>
                        </DataTemplate>

                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Header="Context" Binding="{Binding Context}"
                                    CanUserSort="False"/>
                <DataGridTextColumn Header="Время" Binding="{Binding Time}"
                                    CanUserSort="False"/>-->
                <DataGridTextColumn Header="Scope" Binding="{Binding Scope}"
                                    CanUserSort="False"
                                    MinWidth="60"/>
                <DataGridTextColumn Header="Сообщение" Binding="{Binding Message}" 
                                    CanUserSort="False"
                                    MinWidth="550" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
    
</reactiveUI:ReactiveUserControl>
